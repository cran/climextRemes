0.2.0:

* added Koopman confidence interval method to 'calc_riskRatio_binom'.

* added various types of bootstrap confidence intervals (basic, percentile, BCA, bootstrap-t) to 'calc_riskRatio_binom', 'calc_riskRatio_gev', and 'calc_riskRatio_pot'.

* simplified optimization in likelihood-ratio-based confidence intervals for risk ratio.

* fixed a bug in remove_runs() that caused failure to remove any values when upperTail is FALSE; also fixed jittering amount to work regardless of magnitude of values.

* fixed bug in cases where 'x' provided to 'fit_pot' or 'fit_gev' but no regression functions specified.

* added Python version of all examples to Python front end.

* reworked help information for Python front end to show arguments in terms of Python syntax.

* added functionality to update R version from Python and keep Python and R versions in sync.

* forced R warnings to be printed in Python version.

* added Conda deployment information for Python version.

0.1.3:

* now allow users to request multiple return values or return periods (or differences of values or periods)  when using 'fit_gev' and 'fit_pot'.

* added user option to return return quantities (via 'getReturnCalcs'), parameter estimates (via 'getParams') and fitted model information (via 'getFit') from the fitted models in 'calc_riskRatio_gev' and 'calc_riskRatio_pot'.

* added user option 'logScale' to specify if scale should be fit on log scale

* added functionality to avoid standard error calculations of return quantities when fitting bootstrapped datasets to avoid unnecessary computation

* new error trapping to detect when names in formulae are not present in data 'x', 'xNew', or 'xContrast'

* added additional help information regarding convergence failures

0.1.2:

* added check that 'blockIndex' does not put one outside range of 'x', 'weights', or 'proportionMissing'

* added check for NA in 'blockIndex', 'x', 'xObs'

* report warning if risk ratio confidence interval optimization results in estimate of either endpoint of confidence interval equal to an endpoint of the interval (i.e., 'bounds' value) used for optimization

0.1.1: 

* first internal release
